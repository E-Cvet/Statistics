{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "imported-counter",
   "metadata": {
    "id": "imported-counter"
   },
   "source": [
    "# Week 4: Intro to Statistics and Probability"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "inner-ordinance",
   "metadata": {
    "id": "inner-ordinance"
   },
   "outputs": [],
   "source": [
    "# import libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "reflected-checkout",
   "metadata": {
    "id": "reflected-checkout"
   },
   "source": [
    "## Day 1: Descriptive Statistics\n",
    "* Statistics is the science (or part of mathematics) that deals with collection, presentation and analysis of data\n",
    "* Generally, statistics can be seen as consisting of two parts:\n",
    "    * **Descriptive statistics**, whose goal is to collect and present the data, and provide description of the data's main features\n",
    "    * **Inferential statistics**, whose goal is to provide well-founded conclusions based on the collected data, usually with the help of probability\n",
    "\n",
    "**Note:** the term *data* can be either plural or singular, so you could say \"data is\" or \"data are\". If you use *data* as plural, then the singular is *datum*\n",
    "\n",
    "### Basic concepts\n",
    "* Data is usually structured in **data sets**. Frequently the data sets take the form of tables, or in our case -- Pandas DataFrames\n",
    "* The rows of the data sets are called **instances** or **observations**\n",
    "* The columns of the data sets contain the **features** or **feature vectors** or **variables** of the set\n",
    "* Let's load the *titaninc.csv* and see its structure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "hearing-female",
   "metadata": {
    "id": "hearing-female"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Class</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Survived  Class                                               Name  \\\n",
       "0      1         0      3                            Braund, Mr. Owen Harris   \n",
       "1      2         1      1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2      3         1      3                             Heikkinen, Miss. Laina   \n",
       "3      4         1      1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4      5         0      3                           Allen, Mr. William Henry   \n",
       "..   ...       ...    ...                                                ...   \n",
       "886  887         0      2                              Montvila, Rev. Juozas   \n",
       "887  888         1      1                       Graham, Miss. Margaret Edith   \n",
       "888  889         0      3           Johnston, Miss. Catherine Helen \"Carrie\"   \n",
       "889  890         1      1                              Behr, Mr. Karl Howell   \n",
       "890  891         0      3                                Dooley, Mr. Patrick   \n",
       "\n",
       "        Sex   Age     Fare Embarked  \n",
       "0      male  22.0   7.2500        S  \n",
       "1    female  38.0  71.2833        C  \n",
       "2    female  26.0   7.9250        S  \n",
       "3    female  35.0  53.1000        S  \n",
       "4      male  35.0   8.0500        S  \n",
       "..      ...   ...      ...      ...  \n",
       "886    male  27.0  13.0000        S  \n",
       "887  female  19.0  30.0000        S  \n",
       "888  female   NaN  23.4500        S  \n",
       "889    male  26.0  30.0000        C  \n",
       "890    male  32.0   7.7500        Q  \n",
       "\n",
       "[891 rows x 8 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the set\n",
    "df = pd.read_csv('titanic.csv')\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "permanent-outline",
   "metadata": {
    "id": "permanent-outline",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Embarked</th>\n",
       "      <th>freq</th>\n",
       "      <th>relative freq</th>\n",
       "      <th>% freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C</td>\n",
       "      <td>168</td>\n",
       "      <td>0.188552</td>\n",
       "      <td>18.855219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q</td>\n",
       "      <td>77</td>\n",
       "      <td>0.086420</td>\n",
       "      <td>8.641975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>S</td>\n",
       "      <td>644</td>\n",
       "      <td>0.722783</td>\n",
       "      <td>72.278339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Embarked  freq  relative freq     % freq\n",
       "0        C   168       0.188552  18.855219\n",
       "1        Q    77       0.086420   8.641975\n",
       "2        S   644       0.722783  72.278339"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count instances and features\n",
    "df_freq_dist = pd.DataFrame()\n",
    "\n",
    "feature_col = 'Embarked'\n",
    "\n",
    "df_freq_dist[feature_col] = df.groupby(feature_col).size().reset_index()[feature_col]\n",
    "df_freq_dist['freq'] = df.groupby(feature_col).size().reset_index()[0]\n",
    "\n",
    "df_freq_dist['relative freq'] = df_freq_dist['freq'] / df.shape[0]\n",
    "\n",
    "df_freq_dist['% freq'] = df_freq_dist['relative freq'] * 100\n",
    "\n",
    "df_freq_dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "51e8c7ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='freq', ax=ax[0])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='relative freq', ax=ax[1])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='% freq', ax=ax[2])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fitted-product",
   "metadata": {
    "id": "fitted-product"
   },
   "source": [
    "### Types of features/variables\n",
    "There are two types of features:\n",
    "* **Categorical**: labels or names used to identify an attribute of each element. Possibly we can compare different cateogries by ordering, but there is somewhat limited number of available statistical analyses\n",
    "* **Numerical** or **quantitative**: data that indicate *how many* or *how much*. These come in two \"flavors\"\n",
    "    * **Discrete** if measuring how many (think: *counting*)\n",
    "    * **Continuous** if measuring how much (think: *measuring*)\n",
    "\n",
    "In the Titanic data set:\n",
    "* Categorical features are: *Survived*, *Class* (these two are **coded**), *Name*, *Sex*, and *Embarked*\n",
    "* Numerical features are: *ID* (not of much use), *Age*, and *Fare*"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "transparent-nirvana",
   "metadata": {
    "id": "transparent-nirvana"
   },
   "source": [
    "### Summarizing Categorical Data\n",
    "Data can be summarized in tables or through visual representations\n",
    "\n",
    "* Tabular summaries for categorical data include:\n",
    "    * Frequency distribution\n",
    "    * Relative/Percent Frequency distribution\n",
    "* Visual summaries for categorical data include:\n",
    "    * Bar/Column graph\n",
    "    * Pie chart\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "hairy-foster",
   "metadata": {
    "id": "hairy-foster"
   },
   "source": [
    "### Example 1\n",
    "* Calculate the three types of frequency distributions of the feature *Embarked* and display it on a bar graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "75e41b4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Embarked</th>\n",
       "      <th>freq</th>\n",
       "      <th>relative freq</th>\n",
       "      <th>% freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C</td>\n",
       "      <td>168</td>\n",
       "      <td>0.188552</td>\n",
       "      <td>18.855219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q</td>\n",
       "      <td>77</td>\n",
       "      <td>0.086420</td>\n",
       "      <td>8.641975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>S</td>\n",
       "      <td>644</td>\n",
       "      <td>0.722783</td>\n",
       "      <td>72.278339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Embarked  freq  relative freq     % freq\n",
       "0        C   168       0.188552  18.855219\n",
       "1        Q    77       0.086420   8.641975\n",
       "2        S   644       0.722783  72.278339"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count instances and features\n",
    "df_freq_dist = pd.DataFrame()\n",
    "\n",
    "feature_col = 'Embarked'\n",
    "\n",
    "df_freq_dist[feature_col] = df.groupby(feature_col).size().reset_index()[feature_col]\n",
    "df_freq_dist['freq'] = df.groupby(feature_col).size().reset_index()[0]\n",
    "\n",
    "df_freq_dist['relative freq'] = df_freq_dist['freq'] / df.shape[0]\n",
    "\n",
    "df_freq_dist['% freq'] = df_freq_dist['relative freq'] * 100\n",
    "\n",
    "df_freq_dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "19b0c068",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='freq', ax=ax[0])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='relative freq', ax=ax[1])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='% freq', ax=ax[2])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "59f6e9a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "# plt.pie(data, labels=keys, colors=palette_color, autopct='%.0f%%') \n",
    "\n",
    "ax[0].pie(df_freq_dist['freq'], labels=[*df_freq_dist[feature_col]])\n",
    "ax[1].pie(df_freq_dist['relative freq'], labels=[*df_freq_dist[feature_col]])\n",
    "ax[2].pie(df_freq_dist['% freq'], labels=[*df_freq_dist[feature_col]])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "KM4tD0T63YRh",
   "metadata": {
    "id": "KM4tD0T63YRh"
   },
   "source": [
    "### Example 2\n",
    "* Construct the frequency distribution for the feature *Survived* and display it on a bar graph and on a pie chart."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "d107cfb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>freq</th>\n",
       "      <th>relative freq</th>\n",
       "      <th>% freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>549</td>\n",
       "      <td>0.616162</td>\n",
       "      <td>61.616162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>342</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>38.383838</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  freq  relative freq     % freq\n",
       "0         0   549       0.616162  61.616162\n",
       "1         1   342       0.383838  38.383838"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count instances and features\n",
    "df_freq_dist = pd.DataFrame()\n",
    "\n",
    "feature_col = 'Survived'\n",
    "\n",
    "df_freq_dist[feature_col] = df.groupby(feature_col).size().reset_index()[feature_col]\n",
    "df_freq_dist['freq'] = df.groupby(feature_col).size().reset_index()[0]\n",
    "\n",
    "df_freq_dist['relative freq'] = df_freq_dist['freq'] / df.shape[0]\n",
    "\n",
    "df_freq_dist['% freq'] = df_freq_dist['relative freq'] * 100\n",
    "\n",
    "df_freq_dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "bb866d18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='freq', ax=ax[0])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='relative freq', ax=ax[1])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='% freq', ax=ax[2])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "7c1d6211",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "# plt.pie(data, labels=keys, colors=palette_color, autopct='%.0f%%') \n",
    "\n",
    "ax[0].pie(df_freq_dist['freq'], labels=[*df_freq_dist[feature_col]])\n",
    "ax[1].pie(df_freq_dist['relative freq'], labels=[*df_freq_dist[feature_col]])\n",
    "ax[2].pie(df_freq_dist['% freq'], labels=[*df_freq_dist[feature_col]])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "504a639e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>freq</th>\n",
       "      <th>relative freq</th>\n",
       "      <th>% freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.42</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001122</td>\n",
       "      <td>0.112233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.67</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001122</td>\n",
       "      <td>0.112233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.75</td>\n",
       "      <td>2</td>\n",
       "      <td>0.002245</td>\n",
       "      <td>0.224467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.83</td>\n",
       "      <td>2</td>\n",
       "      <td>0.002245</td>\n",
       "      <td>0.224467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.92</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001122</td>\n",
       "      <td>0.112233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>70.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0.002245</td>\n",
       "      <td>0.224467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>70.50</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001122</td>\n",
       "      <td>0.112233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>71.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0.002245</td>\n",
       "      <td>0.224467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>74.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001122</td>\n",
       "      <td>0.112233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>80.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001122</td>\n",
       "      <td>0.112233</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>88 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Age  freq  relative freq    % freq\n",
       "0    0.42     1       0.001122  0.112233\n",
       "1    0.67     1       0.001122  0.112233\n",
       "2    0.75     2       0.002245  0.224467\n",
       "3    0.83     2       0.002245  0.224467\n",
       "4    0.92     1       0.001122  0.112233\n",
       "..    ...   ...            ...       ...\n",
       "83  70.00     2       0.002245  0.224467\n",
       "84  70.50     1       0.001122  0.112233\n",
       "85  71.00     2       0.002245  0.224467\n",
       "86  74.00     1       0.001122  0.112233\n",
       "87  80.00     1       0.001122  0.112233\n",
       "\n",
       "[88 rows x 4 columns]"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count instances and features\n",
    "df_freq_dist = pd.DataFrame()\n",
    "\n",
    "feature_col = 'Age'\n",
    "\n",
    "df_freq_dist[feature_col] = df.groupby(feature_col).size().reset_index()[feature_col]\n",
    "df_freq_dist['freq'] = df.groupby(feature_col).size().reset_index()[0]\n",
    "\n",
    "df_freq_dist['relative freq'] = df_freq_dist['freq'] / df.shape[0]\n",
    "\n",
    "df_freq_dist['% freq'] = df_freq_dist['relative freq'] * 100\n",
    "\n",
    "df_freq_dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "600f0b03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='freq', ax=ax[0])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='relative freq', ax=ax[1])\n",
    "sns.barplot(data=df_freq_dist, x=feature_col, y='% freq', ax=ax[2])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "i94h2ymoo9wN",
   "metadata": {
    "id": "i94h2ymoo9wN"
   },
   "source": [
    "### Example 3\n",
    "* Construct the frequency distribution for the feature *Age* and display it on a histogram."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a61d221f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Class</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Survived  Class                                               Name  \\\n",
       "0      1         0      3                            Braund, Mr. Owen Harris   \n",
       "1      2         1      1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2      3         1      3                             Heikkinen, Miss. Laina   \n",
       "3      4         1      1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4      5         0      3                           Allen, Mr. William Henry   \n",
       "..   ...       ...    ...                                                ...   \n",
       "886  887         0      2                              Montvila, Rev. Juozas   \n",
       "887  888         1      1                       Graham, Miss. Margaret Edith   \n",
       "888  889         0      3           Johnston, Miss. Catherine Helen \"Carrie\"   \n",
       "889  890         1      1                              Behr, Mr. Karl Howell   \n",
       "890  891         0      3                                Dooley, Mr. Patrick   \n",
       "\n",
       "        Sex   Age     Fare Embarked  \n",
       "0      male  22.0   7.2500        S  \n",
       "1    female  38.0  71.2833        C  \n",
       "2    female  26.0   7.9250        S  \n",
       "3    female  35.0  53.1000        S  \n",
       "4      male  35.0   8.0500        S  \n",
       "..      ...   ...      ...      ...  \n",
       "886    male  27.0  13.0000        S  \n",
       "887  female  19.0  30.0000        S  \n",
       "888  female   NaN  23.4500        S  \n",
       "889    male  26.0  30.0000        C  \n",
       "890    male  32.0   7.7500        Q  \n",
       "\n",
       "[891 rows x 8 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the set\n",
    "df = pd.read_csv('titanic.csv')\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "4065293e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove nan values from the dataset:\n",
    "# df.dropna(axis=0, inplace=True)  # for all values nan in the df\n",
    "\n",
    "df.dropna(axis=0, subset=('Age'), how='any', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "42b04685",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Class</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>886</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Rice, Mrs. William (Margaret Norton)</td>\n",
       "      <td>female</td>\n",
       "      <td>39.0</td>\n",
       "      <td>29.1250</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>714 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Survived  Class                                               Name  \\\n",
       "0      1         0      3                            Braund, Mr. Owen Harris   \n",
       "1      2         1      1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2      3         1      3                             Heikkinen, Miss. Laina   \n",
       "3      4         1      1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4      5         0      3                           Allen, Mr. William Henry   \n",
       "..   ...       ...    ...                                                ...   \n",
       "885  886         0      3               Rice, Mrs. William (Margaret Norton)   \n",
       "886  887         0      2                              Montvila, Rev. Juozas   \n",
       "887  888         1      1                       Graham, Miss. Margaret Edith   \n",
       "889  890         1      1                              Behr, Mr. Karl Howell   \n",
       "890  891         0      3                                Dooley, Mr. Patrick   \n",
       "\n",
       "        Sex   Age     Fare Embarked  \n",
       "0      male  22.0   7.2500        S  \n",
       "1    female  38.0  71.2833        C  \n",
       "2    female  26.0   7.9250        S  \n",
       "3    female  35.0  53.1000        S  \n",
       "4      male  35.0   8.0500        S  \n",
       "..      ...   ...      ...      ...  \n",
       "885  female  39.0  29.1250        Q  \n",
       "886    male  27.0  13.0000        S  \n",
       "887  female  19.0  30.0000        S  \n",
       "889    male  26.0  30.0000        C  \n",
       "890    male  32.0   7.7500        Q  \n",
       "\n",
       "[714 rows x 8 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "OUgLIgzC9llz",
   "metadata": {
    "id": "OUgLIgzC9llz",
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Age interval : [0.42, 80.0]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Class</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Age Group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>886</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Rice, Mrs. William (Margaret Norton)</td>\n",
       "      <td>female</td>\n",
       "      <td>39.0</td>\n",
       "      <td>29.1250</td>\n",
       "      <td>Q</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>Q</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>714 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Survived  Class                                               Name  \\\n",
       "0      1         0      3                            Braund, Mr. Owen Harris   \n",
       "1      2         1      1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2      3         1      3                             Heikkinen, Miss. Laina   \n",
       "3      4         1      1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4      5         0      3                           Allen, Mr. William Henry   \n",
       "..   ...       ...    ...                                                ...   \n",
       "885  886         0      3               Rice, Mrs. William (Margaret Norton)   \n",
       "886  887         0      2                              Montvila, Rev. Juozas   \n",
       "887  888         1      1                       Graham, Miss. Margaret Edith   \n",
       "889  890         1      1                              Behr, Mr. Karl Howell   \n",
       "890  891         0      3                                Dooley, Mr. Patrick   \n",
       "\n",
       "        Sex   Age     Fare Embarked  Age Group  \n",
       "0      male  22.0   7.2500        S          3  \n",
       "1    female  38.0  71.2833        C          3  \n",
       "2    female  26.0   7.9250        S          3  \n",
       "3    female  35.0  53.1000        S          3  \n",
       "4      male  35.0   8.0500        S          3  \n",
       "..      ...   ...      ...      ...        ...  \n",
       "885  female  39.0  29.1250        Q          3  \n",
       "886    male  27.0  13.0000        S          3  \n",
       "887  female  19.0  30.0000        S          2  \n",
       "889    male  26.0  30.0000        C          3  \n",
       "890    male  32.0   7.7500        Q          3  \n",
       "\n",
       "[714 rows x 9 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(f\"Age interval : [{df['Age'].min()}, {df['Age'].max()}]\")\n",
    "\n",
    "# Baby : [0, 2], Children (2, 11], adolescent [12, 19], young adults [20, 39], middle-aged [40, 60], old-aged [61 - max]\n",
    "\n",
    "# Baby: df['Age'].min() <= age <= 2, \n",
    "# Children: 2 < age <= 11, \n",
    "# Adolescent: 11 < age <= 19, \n",
    "# Young Adults: 19 < age <= 39\n",
    "# Middle-aged: 39 < age <= 60\n",
    "# old-aged: 60 < age <= df['Age'].max()\n",
    "\n",
    "age_group = []\n",
    "\n",
    "for age in df['Age']:\n",
    "    if df['Age'].min() <= age <= 2:\n",
    "        age_group.append(0)\n",
    "    elif 2 < age <= 11:\n",
    "        age_group.append(1)\n",
    "    elif 11 < age <= 19:\n",
    "        age_group.append(2)\n",
    "    elif 19 < age <= 39:\n",
    "        age_group.append(3)\n",
    "    elif 39 < age <= 60:\n",
    "        age_group.append(4)\n",
    "    elif 60 < age <= df['Age'].max():\n",
    "        age_group.append(5)\n",
    "\n",
    "df['Age Group'] = age_group\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "414182cd",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age Group</th>\n",
       "      <th>freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Group  freq\n",
       "0          0    24\n",
       "1          1    44\n",
       "2          2    96\n",
       "3          3   387\n",
       "4          4   141\n",
       "5          5    22"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "freq_dist_values = df.groupby('Age Group').size().reset_index()\n",
    "\n",
    "freq_dist_values.rename(columns={0 : 'freq'}, inplace=True)\n",
    "\n",
    "freq_dist_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b87a025b",
   "metadata": {},
   "outputs": [],
   "source": [
    "freq_dist_values['relative freq'] = freq_dist_values['freq'] / df.shape[0]\n",
    "\n",
    "freq_dist_values['% freq'] = freq_dist_values['relative freq'] * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "81057f68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(14, 4))\n",
    "\n",
    "sns.barplot(data=freq_dist_values, x='Age Group', y='freq')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a2f4e03d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age Group</th>\n",
       "      <th>freq</th>\n",
       "      <th>relative freq</th>\n",
       "      <th>% freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0.033613</td>\n",
       "      <td>3.361345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.061625</td>\n",
       "      <td>6.162465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>96</td>\n",
       "      <td>0.134454</td>\n",
       "      <td>13.445378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>387</td>\n",
       "      <td>0.542017</td>\n",
       "      <td>54.201681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>141</td>\n",
       "      <td>0.197479</td>\n",
       "      <td>19.747899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>22</td>\n",
       "      <td>0.030812</td>\n",
       "      <td>3.081232</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Group  freq  relative freq     % freq\n",
       "0          0    24       0.033613   3.361345\n",
       "1          1    44       0.061625   6.162465\n",
       "2          2    96       0.134454  13.445378\n",
       "3          3   387       0.542017  54.201681\n",
       "4          4   141       0.197479  19.747899\n",
       "5          5    22       0.030812   3.081232"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "freq_dist_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "7c622f83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3)\n",
    "\n",
    "fig.set_figheight(4)\n",
    "fig.set_figwidth(14)\n",
    "\n",
    "sns.barplot(data=freq_dist_values, x='Age Group', y='freq', ax=ax[0])\n",
    "sns.barplot(data=freq_dist_values, x='Age Group', y='relative freq', ax=ax[1])\n",
    "sns.barplot(data=freq_dist_values, x='Age Group', y='% freq', ax=ax[2])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "8e3b579b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Age Group', ylabel='Probability'>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(12, 4))\n",
    "\n",
    "sns.histplot(data=df, x='Age Group', stat='probability')\n",
    "\n",
    "sns.histplot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "occasional-stable",
   "metadata": {
    "id": "occasional-stable"
   },
   "source": [
    "### Summarizing Numerical Data\n",
    "Data can be summarized in tables or through visual representations\n",
    "\n",
    "* Tabular summaries for numerical data include:\n",
    "    * Frequency distribution with classes\n",
    "    * Relative/Percent Frequency distribution with classes\n",
    "* Visual summaries for categorical data include:\n",
    "    * Histogram\n",
    "    * Box-plot"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "static-placement",
   "metadata": {
    "id": "static-placement"
   },
   "source": [
    "### Measures of central tendency\n",
    "Most frequently we wish to represent a feature with a single number. There are several options for this:\n",
    "* **Mean**: the average of the data. The mean is heavily influenced by outliers/extreme values\n",
    "* **Median**: the middle data point in the ordered list of points. Much more resistent to extreme values comared to the mean. Note that the median splits the data set in (roughly) 50%-50% ratio\n",
    "* **Mode**: the most frequent data point in the feature. Not unique, and usually not suited for numerical variables\n",
    "\n",
    "### Example 4\n",
    "* Calculate the mean and median age of the passenger aboard the *Titanic*. Then calculate the mean and median fare rates."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "recreational-circular",
   "metadata": {
    "id": "recreational-circular"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age_bar = 29.69911764705882\n",
      "fare_bar = 34.694514005602244\n"
     ]
    }
   ],
   "source": [
    "# Age\n",
    "age_bar = df['Age'].mean()\n",
    "\n",
    "# Fare:\n",
    "fare_bar = df['Fare'].mean()\n",
    "\n",
    "# Outputs:\n",
    "print(f\"age_bar = {age_bar}\")\n",
    "print(f\"fare_bar = {fare_bar}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "strange-survey",
   "metadata": {
    "id": "strange-survey"
   },
   "source": [
    "### Measures of variability\n",
    "When analyzing numerical data it is always a good habit to include information about the \"diversity\" of the data. This \"diversity\" in statistics is known as **variability**. There are many measures of variability; we single out the following:\n",
    "* **Range**: just the distance between the min and the max of the feature values. Heavily influenced by extreme values. Captures 100% of the data\n",
    "* **Variance**: the mean square deviation of the data from the mean. Mostly deffers to the standard deviation\n",
    "* **Standar Deviation**: the square root of the variance. Probably hhe golden standard. Great to use alongside the mean\n",
    "* **Interquartile Range (IQR)**: captures the *middle* 50% of the data. Great to use alongside the median\n",
    "\n",
    "### Example 5\n",
    "* Calculate the measures of variability of *Age* for the Titanic data set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "mounted-husband",
   "metadata": {
    "id": "mounted-husband"
   },
   "outputs": [],
   "source": [
    "# Simplest way to get many of these Column.describe():\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "-W8aqIs25N6Y",
   "metadata": {
    "id": "-W8aqIs25N6Y"
   },
   "source": [
    "### Example: Fuel data\n",
    "\n",
    "* Use *examples_data.xlsx*, sheet *fuel_data*\n",
    "* Plot boxplots for Hwy MPG and City MPG for the various vehicle sizes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ZjOHb_MQ5Oqy",
   "metadata": {
    "id": "ZjOHb_MQ5Oqy"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "trying-territory",
   "metadata": {
    "id": "trying-territory"
   },
   "source": [
    "### Measuring departure from symmetricity\n",
    "* The distribution of the fares is *skewed to the right* or *positively skewed* -- it has a tail dragging onto the right\n",
    "* Many statistical procedures are tailored to work with data that is **symmetric**, i.e. data that has balanced tails\n",
    "* The **skewness** coefficient quantifies the departure from symmetricity\n",
    "* Positive values of the coefficient indicate skewness to the right. Negative values of the coefficient indicate skewness to the left. The greater the number (in terms of absolute value), the greater the skewness.\n",
    "\n",
    "### Example 6\n",
    "* Calculate the skewness of the *Age* and *Fare* features in the Titanic data set.\n",
    "\n",
    "**Note:** Skewness is measured by following a formula that involves multiplying the difference between mean and median by three and dividing by the standard deviation. Skewness = 3(mean-median)/standard deviation or in Python scipy.stats.skew(...)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "robust-spice",
   "metadata": {
    "id": "robust-spice"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "everyday-amino",
   "metadata": {
    "id": "everyday-amino"
   },
   "source": [
    "### Detecting outliers\n",
    "* **Outliers** (extreme points, influential points) are elements of the data set that severely depart from *most of the data*\n",
    "* Generally, these should be handeled somehow before modeling\n",
    "* Options include dropping the outliers or transforming the original data\n",
    "* One way to detect outliers is to use **standardization** -- measure how many standard deviations from the mean is each data point. For every data point $x$ we calculate a $z$-score using the formula:\n",
    "\\begin{equation} z = \\frac{x - \\mu}{\\sigma} \\end{equation}\n",
    "where $\\mu$ is the mean and $\\sigma$ is the standard deviation of the data\n",
    "* A point is labeled as an outlier if $|z| \\geqslant 3$\n",
    "\n",
    "### Example 7\n",
    "* List the outliers in the *Fare* feature of the Titanic data set using standardization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "22ca139b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "controversial-recommendation",
   "metadata": {
    "id": "controversial-recommendation"
   },
   "source": [
    "* Another way to detect outliers is by using the quartiles $Q_1$ and $Q_3$, and the IQR. This is done by defining appropriate upper and lower boundaries of an interval of values.\n",
    "* Data outside this interval are labeled as outlers.\n",
    "* This is known as the $1.5\\times IQR$ rule. The boundaries are:\n",
    "\\begin{equation}\n",
    "\\begin{array}{rcl}\n",
    "L &=& Q_1 - 1.5 \\cdot IQR\\\\\n",
    "U &=& Q_3 + 1.5 \\cdot IQR\n",
    "\\end{array}\n",
    "\\end{equation}\n",
    "* Data outside the interval $[L, U]$ are labeled as outliers.\n",
    "\n",
    "### Example 8\n",
    "* List the outliers in the *Fare* feature of the Titanic data set using the $1.5\\times IQR$ rule"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "controlled-november",
   "metadata": {
    "id": "controlled-november"
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
